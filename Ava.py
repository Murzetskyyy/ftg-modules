from telethon import functions, types
from .. import loader, utils
import io
from PIL import Image

def register(cb): cb(AvaMod())

class AvaMod(loader.Module):
    """–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è/–≤–∏–¥–∞–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–æ–∫ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–∏"""
    strings = {'name': 'Ava'}

    def __init__(self):
        self.name = self.strings['name']

    async def client_ready(self, client, db): pass

    async def avacmd(self, message):
        '–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∞–≤–∞—Ç–∞—Ä–∫—É <reply to image>'
        reply = await message.get_reply_message()
        if not reply or not reply.media:
            return await message.edit("‚ùå –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ —Ñ–æ—Ç–æ.")

        await message.edit("üì• –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–∞ –æ–±—Ä—ñ–∑–∞—î–º–æ —Ñ–æ—Ç–æ...")
        file = await make_square(reply)

        uploaded = await message.client.upload_file(file)

        await message.edit("üñº –°—Ç–∞–≤–∏–º–æ –∞–≤–∞—Ç–∞—Ä–∫—É...")
        await message.client(
            functions.photos.UploadProfilePhotoRequest(
                file=uploaded
            )
        )
        await message.edit("‚úÖ –ê–≤–∞—Ç–∞—Ä–∫—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")

    async def delavacmd(self, message):
        '–í–∏–¥–∞–ª–∏—Ç–∏ –∞–∫—Ç–∏–≤–Ω—É –∞–≤–∞—Ç–∞—Ä–∫—É'
        ava = await message.client.get_profile_photos('me', limit=1)
        if ava:
            await message.edit("üóë –í–∏–¥–∞–ª—è—î–º–æ –ø–µ—Ä—à—É –∞–≤–∞—Ç–∞—Ä–∫—É...")
            await message.client(functions.photos.DeletePhotosRequest(ava))
            await message.edit("‚úÖ –ü–µ—Ä—à–∞ –∞–≤–∞—Ç–∞—Ä–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–∞.")
        else:
            await message.edit("üò∂ –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –∞–≤–∞—Ç–∞—Ä–æ–∫.")

    async def delavascmd(self, message):
        '–í–∏–¥–∞–ª–∏—Ç–∏ —É—Å—ñ –∞–≤–∞—Ç–∞—Ä–∫–∏'
        ava = await message.client.get_profile_photos('me')
        if ava:
            await message.edit("üóë –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –∞–≤–∞—Ç–∞—Ä–∫–∏...")
            await message.client(functions.photos.DeletePhotosRequest(ava))
            await message.edit("‚úÖ –£—Å—ñ –∞–≤–∞—Ç–∞—Ä–∫–∏ –≤–∏–¥–∞–ª–µ–Ω—ñ.")
        else:
            await message.edit("üò∂ –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –∞–≤–∞—Ç–∞—Ä–æ–∫.")

async def make_square(msg):
    """–û–±—Ä–µ–∑–∞–µ—Ç —Ñ–æ—Ç–æ –¥–æ –∫–≤–∞–¥—Ä–∞—Ç–∞ (—Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ—Ç)"""
    image = Image.open(io.BytesIO(await msg.download_media(bytes)))
    width, height = image.size

    # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–µ–∑–∫–∞
    min_dim = min(width, height)
    left = (width - min_dim) // 2
    top = (height - min_dim) // 2
    image = image.crop((left, top, left + min_dim, top + min_dim)).convert("RGB")

    output = io.BytesIO()
    image.save(output, format='JPEG', quality=100)
    output.seek(0)
    return output
